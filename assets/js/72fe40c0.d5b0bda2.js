"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[851],{49164:e=>{e.exports=JSON.parse('{"functions":[{"name":"New","desc":"Index a new Signal.","params":[{"name":"Name","desc":"The name to use for the newly created Signal.","lua_type":"string"},{"name":"Listener","desc":"The listener to use for the newly created Signal.","lua_type":"string"}],"returns":[{"desc":"Return the signal class\'s metatable.","lua_type":"table"}],"function_type":"static","source":{"line":72,"path":"src/Signal/init.lua"}},{"name":"Is","desc":"Return whether or not the specified object is a Signal.","params":[{"name":"Object","desc":"The specified object.","lua_type":"table"}],"returns":[{"desc":"Return whether or not the specified object is a Signal.","lua_type":"boolean"}],"function_type":"static","source":{"line":109,"path":"src/Signal/init.lua"}}],"properties":[],"types":[{"name":"SignalMethods","desc":"\\tspecified callback function.\\n\\tresulting in zero code interference.\\n\\tretrieving the function\'s callback.\\n\\tnecessary arguments.\\n\\nAll of the subsidiary code within Signal.","fields":[{"name":"Connect","lua_type":"table","desc":"Connect to the signal while waiting for a fire to load the"},{"name":"ConnectOnce","lua_type":"table","desc":"Unlike the normal connect method, this will run once."},{"name":"ConnectParallel","lua_type":"table","desc":"Unlike the normal connect method, this will run in parallel,"},{"name":"Wait","lua_type":"Wait","desc":"Wait for the connection to be fired and then return any retrieved values."},{"name":"Fire","lua_type":"table","desc":"Fire the current signal\'s connections."},{"name":"FireUntil","lua_type":"table","desc":"Fire the current signal\'s connections until the specified callback is reached."},{"name":"OnInvoke","lua_type":"table","desc":"Create a callback function that\'d be activated on invoke,"},{"name":"Invoke","lua_type":"table","desc":"Wait until the \\\\\\"OnInvoke\\\\\\" method exists and then invoke with the"},{"name":"Destroy","lua_type":"table","desc":"Destroy and cleanup a Signal."}],"source":{"line":53,"path":"src/Signal/init.lua"}}],"name":"Signal","desc":"A class providing the cleanest and most efficient way of managing events via code.","source":{"line":30,"path":"src/Signal/init.lua"}}')}}]);