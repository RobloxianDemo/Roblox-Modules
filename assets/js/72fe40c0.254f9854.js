"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[851],{49164:e=>{e.exports=JSON.parse('{"functions":[{"name":"New","desc":"Index a new Signal.","params":[{"name":"Name","desc":"The name to use for the newly created Signal.","lua_type":"string"},{"name":"Listener","desc":"The listener to use for the newly created Signal.","lua_type":"string"}],"returns":[{"desc":"Return the signal class\'s metatable.","lua_type":"table"}],"function_type":"static","source":{"line":52,"path":"src/Signal/init.lua"}},{"name":"Is","desc":"Return whether or not the specified object is a SignalMethods.","params":[{"name":"Object","desc":"The specified object.","lua_type":"table"}],"returns":[{"desc":"Return whether or not the specified object is a SignalMethods.","lua_type":"boolean"}],"function_type":"static","source":{"line":89,"path":"src/Signal/init.lua"}},{"name":"Connect","desc":"Connect to the signal while waiting for a fire to load the specified callback function.","params":[{"name":"Callback","desc":"The specified callback function.","lua_type":"Function"}],"returns":[{"desc":"Return a table consisting of disconnect-related functions.","lua_type":"Connection"}],"function_type":"method","source":{"line":102,"path":"src/Signal/init.lua"}},{"name":"ConnectOnce","desc":"Unlike the normal connect method, this will run once.","params":[{"name":"Callback","desc":"The specified callback function.","lua_type":"Function"}],"returns":[{"desc":"Return a table consisting of disconnect-related functions.","lua_type":"Connection"}],"function_type":"method","source":{"line":133,"path":"src/Signal/init.lua"}},{"name":"ConnectToOnClose","desc":"Unlike the normal connect method, this will run when specified callback when the server\'s closing.","params":[{"name":"Callback","desc":"The specified callback function.","lua_type":"Function"}],"returns":[{"desc":"Return a table consisting of disconnect-related functions.","lua_type":"Connection"}],"function_type":"method","source":{"line":157,"path":"src/Signal/init.lua"}},{"name":"ConnectParallel","desc":"Unlike the normal connect method, this will run in parallel, resulting in zero code interference.","params":[{"name":"Callback","desc":"The specified callback function.","lua_type":"Function"}],"returns":[{"desc":"Return a table consisting of disconnect-related functions.","lua_type":"Connection"}],"function_type":"method","source":{"line":181,"path":"src/Signal/init.lua"}},{"name":"Wait","desc":"Wait for the connection to be fired and then return any retrieved values.","params":[],"returns":[{"desc":"Return a table consisting of any retrieved values.","lua_type":"Wait"}],"function_type":"method","source":{"line":196,"path":"src/Signal/init.lua"}},{"name":"Fire","desc":"Fire the current signal\'s connections.","params":[{"name":"...","desc":"The specified arguments to fire with.","lua_type":"any?"}],"returns":[{"desc":"","lua_type":"any?\\n"}],"function_type":"method","source":{"line":219,"path":"src/Signal/init.lua"}},{"name":"FireUntil","desc":"Fire the current signal\'s connections until the specified callback is reached.","params":[{"name":"Callback","desc":"The specified callback.","lua_type":"Function"},{"name":"...","desc":"The specified arguments to fire with.","lua_type":"any?"}],"returns":[{"desc":"","lua_type":"any?\\n"}],"function_type":"method","source":{"line":240,"path":"src/Signal/init.lua"}},{"name":"OnInvoke","desc":"Create a callback function that\'d be activated on invoke, retrieving the function\'s callback.","params":[{"name":"Callback","desc":"The specified callback function.","lua_type":"Function"}],"returns":[{"desc":"","lua_type":"any?\\n"}],"function_type":"method","source":{"line":263,"path":"src/Signal/init.lua"}},{"name":"Invoke","desc":"Wait until the \\\\\\"OnInvoke\\\\\\" method exists and then invoke with the necessary arguments.","params":[{"name":"...","desc":"The specified arguments to invoke with.","lua_type":"any?"}],"returns":[{"desc":"Return the function associated with \\\\\\"OnInvoke\\\\\\".","lua_type":"Function"}],"function_type":"method","source":{"line":276,"path":"src/Signal/init.lua"}},{"name":"Destroy","desc":"Destroy and cleanup a SignalMethods.","params":[],"returns":[{"desc":"","lua_type":"any?\\n"}],"function_type":"method","source":{"line":291,"path":"src/Signal/init.lua"}}],"properties":[],"types":[],"name":"Signal","desc":"A class providing the cleanest and most efficient way of managing events via code.","source":{"line":30,"path":"src/Signal/init.lua"}}')}}]);