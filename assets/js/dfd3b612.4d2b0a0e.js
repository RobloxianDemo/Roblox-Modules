"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[867],{92614:e=>{e.exports=JSON.parse('{"functions":[{"name":"New","desc":"Index a new player.\\n\\n```lua\\n\\tlocal PlayerMethods: table = PlayerClass.New(LocalPlayer)\\n```","params":[{"name":"LocalPlayer","desc":"The player object.","lua_type":"Player"}],"returns":[{"desc":"Return the player class\'s metatable.","lua_type":"table"}],"function_type":"static","source":{"line":64,"path":"src/Player/init.lua"}},{"name":"RetrieveCharacter","desc":"Return the player\'s character.\\n\\n```lua\\n\\tlocal Character: Model = PlayerMethods:RetrieveCharacter()\\n```","params":[],"returns":[{"desc":"Return the player\'s character model.","lua_type":"Model"}],"function_type":"method","source":{"line":95,"path":"src/Player/init.lua"}},{"name":"RetrieveHumanoid","desc":"Return the player\'s character\'s humanoid.\\n\\n```lua\\n\\tlocal Humanoid: Humanoid = PlayerMethods:RetrieveHumanoid()\\n```","params":[],"returns":[{"desc":"Return the player\'s humanoid.","lua_type":"Humanoid"}],"function_type":"method","source":{"line":111,"path":"src/Player/init.lua"}},{"name":"WaitForCharacter","desc":"Wait for and retrn the player\'s character (cancel if five attempts fail).\\n\\n```lua\\n\\tPlayerMethods:WaitForCharacter(function(...: Humanoid | boolean?): any?\\n\\t\\tprint(...) --\x3e Model | Model.Name\\n\\n\\t\\tprint(PlayerMethods:RetrieveCharacter().Name) --\x3e Model.Name\\n\\tend)\\n```","params":[{"name":"Callback","desc":"The specified callback function.","lua_type":"Function?"}],"returns":[{"desc":"Return the player\'s character model or false.","lua_type":"Model | boolean?"}],"function_type":"method","source":{"line":133,"path":"src/Player/init.lua"}},{"name":"WaitForHumanoid","desc":"Wait for and retrn the player\'s characters\' humanoid (cancel if five attempts fail).\\n\\n```lua\\n\\tPlayerMethods:WaitForHumanoid(function(...: Humanoid | boolean?): any?\\n\\t\\tprint(...) --\x3e Humanoid | Humanoid.Name\\n\\n\\t\\tPlayerMethods:SetWalkSpeed(1e+1) --\x3e 10\\n\\t\\tprint(PlayerMethods:RetrieveHumanoid().WalkSpeed) --\x3e 10\\n\\n\\t\\tPlayerMethods:SetWalkSpeed(1e+2) --\x3e 100\\n\\t\\tprint(PlayerMethods:RetrieveHumanoid().WalkSpeed) --\x3e 100\\n\\tend)\\n```","params":[{"name":"Callback","desc":"The specified callback function.","lua_type":"Function?"}],"returns":[{"desc":"Return the player\'s humanoid or false.","lua_type":"Humanoid | boolean?"}],"function_type":"method","source":{"line":179,"path":"src/Player/init.lua"}},{"name":"RetrieveName","desc":"Return the player\'s name.\\n\\n```lua\\n\\tprint(PlayerMethods:RetrieveName()) --\x3e Player.Name\\n```","params":[],"returns":[{"desc":"Return the player\'s name.","lua_type":"string"}],"function_type":"method","source":{"line":215,"path":"src/Player/init.lua"}},{"name":"RetrievePlayer","desc":"Return the player\'s player object.\\n\\n```lua\\n\\tprint(PlayerMethods:RetrievePlayer()) --\x3e Player | Player.Name\\n```","params":[],"returns":[{"desc":"Return the player\'s player object.","lua_type":"Player"}],"function_type":"method","source":{"line":230,"path":"src/Player/init.lua"}},{"name":"RetrieveUserId","desc":"Return the player\'s unique UserId.\\n\\n```lua\\n\\tprint(PlayerMethods:RetrieveUserId()) --\x3e Player.UserId\\n```","params":[],"returns":[{"desc":"Return the player\'s UserId.","lua_type":"number"}],"function_type":"method","source":{"line":245,"path":"src/Player/init.lua"}},{"name":"CharacterAdded","desc":"Run the specified callback function on the addition of the player\'s character.\\n\\n```lua\\n\\tlocal function Callback(): any?\\n\\t\\tprint(\\"The character has been added!\\")\\n\\tend\\n\\n\\tPlayerMethods:CharacterAdded(Callback)\\n```","params":[{"name":"Callback","desc":"The specified callback function.","lua_type":"Function"}],"returns":[{"desc":"","lua_type":"any?\\n"}],"function_type":"method","source":{"line":264,"path":"src/Player/init.lua"}},{"name":"HumanoidAdded","desc":"Run the specified callback function on the addition of the player\'s humanoid.\\n\\n```lua\\n\\tlocal function Callback(): any?\\n\\t\\tprint(\\"The humanoid has been added!\\")\\n\\tend\\n\\n\\tPlayerMethods:HumanoidAdded(Callback)\\n```","params":[{"name":"Callback","desc":"The specified callback function.","lua_type":"Function"}],"returns":[{"desc":"","lua_type":"any?\\n"}],"function_type":"method","source":{"line":287,"path":"src/Player/init.lua"}},{"name":"SetJumpPower","desc":"Set the player\'s jump-power.\\n\\n```lua\\n\\tPlayerMethods:SetJumpPower(JumpPower :: number) --\x3e number\\n```","params":[{"name":"JumpPower","desc":"The specified jump-power to use in a numerical value.","lua_type":"number?"}],"returns":[{"desc":"","lua_type":"any?\\n"}],"function_type":"method","source":{"line":306,"path":"src/Player/init.lua"}},{"name":"UseJumpPower","desc":"Set whether or not to use the player\'s jump-power for jump-related adjustments.\\n\\n```lua\\n\\tPlayerMethods:UseJumpPower(Value :: boolean) --\x3e boolean\\n```","params":[{"name":"Value","desc":"The status of whether or not to use the player\'s jump-power.","lua_type":"boolean?"}],"returns":[{"desc":"","lua_type":"any?\\n"}],"function_type":"method","source":{"line":325,"path":"src/Player/init.lua"}},{"name":"SetJumpHeight","desc":"Set the player\'s jump-height.\\n\\n```lua\\n\\tPlayerMethods:SetJumpHeight(Height :: number) --\x3e number\\n```","params":[{"name":"Height","desc":"The specified jump-height to use in a numerical value.","lua_type":"number?"}],"returns":[{"desc":"","lua_type":"any?\\n"}],"function_type":"method","source":{"line":344,"path":"src/Player/init.lua"}},{"name":"SetMaxSlopeAngle","desc":"Set the player\'s maximum slope angle.\\n\\n```lua\\n\\tPlayerMethods:SetMaxSlopeAngle(Angle :: number) --\x3e number\\n```","params":[{"name":"Angle","desc":"The specified angle to use in a numerical value.","lua_type":"number?"}],"returns":[{"desc":"","lua_type":"any?\\n"}],"function_type":"method","source":{"line":363,"path":"src/Player/init.lua"}},{"name":"SetWalkSpeed","desc":"Set the player\'s walking speed.\\n\\n```lua\\n\\tPlayerMethods:SetWalkSpeed(WalkSpeed :: number) --\x3e number\\n```","params":[{"name":"WalkSpeed","desc":"The specified walking speed to use in a numerical value.","lua_type":"number?"}],"returns":[{"desc":"","lua_type":"any?\\n"}],"function_type":"method","source":{"line":382,"path":"src/Player/init.lua"}},{"name":"Kick","desc":"Kick the player.\\n\\n```lua\\n\\t--// Server\\n\\tPlayerMethods:Kick(\\"nerd\\") --\x3e boolean\\n```","params":[{"name":"Reason","desc":"The specified walking speed to use in a numerical value.","lua_type":"string?"}],"returns":[{"desc":"Was the player successfuly kicked?","lua_type":"boolean"}],"function_type":"method","realm":["Server"],"source":{"line":406,"path":"src/Player/init.lua"}},{"name":"Destroy","desc":"Destroy and cleanup the player class.\\n\\n```lua\\n\\tPlayerMethods:Destroy()\\n```","params":[],"returns":[{"desc":"","lua_type":"any?\\n"}],"function_type":"method","source":{"line":425,"path":"src/Player/init.lua"}}],"properties":[],"types":[],"name":"Player","desc":"A class that wraps the Player object to give more development power.","source":{"line":26,"path":"src/Player/init.lua"}}')}}]);