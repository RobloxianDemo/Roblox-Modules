"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[671],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>m});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=a.createContext({}),s=function(e){var n=a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=s(e.components);return a.createElement(c.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},p=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=s(t),m=r,g=p["".concat(c,".").concat(m)]||p[m]||d[m]||l;return t?a.createElement(g,o(o({ref:n},u),{},{components:t})):a.createElement(g,o({ref:n},u))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,o=new Array(l);o[0]=p;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var s=2;s<l;s++)o[s]=t[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}p.displayName="MDXCreateElement"},59881:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var a=t(87462),r=(t(67294),t(3905));const l={},o="Getting Started With Roblox Modules!",i={unversionedId:"intro",id:"intro",title:"Getting Started With Roblox Modules!",description:"These Roblox Modules could be acquired using Wally, a package manager designed specifically for Roblox-related project development.",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/Roblox-Modules/docs/intro",draft:!1,editUrl:"https://github.com/RobloxianDemo/Roblox-Modules/edit/main/docs/intro.md",tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar"},c={},s=[{value:"Wally Configuration",id:"wally-configuration",level:2},{value:"Rojo Configuration",id:"rojo-configuration",level:2},{value:"Usage Example",id:"usage-example",level:2}],u={toc:s};function d(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"getting-started-with-roblox-modules"},"Getting Started With Roblox Modules!"),(0,r.kt)("p",null,"These Roblox Modules could be acquired using ",(0,r.kt)("a",{parentName:"p",href:"https://wally.run/"},"Wally"),", a package manager designed specifically for Roblox-related project development."),(0,r.kt)("h2",{id:"wally-configuration"},"Wally Configuration"),(0,r.kt)("p",null,"Once Wally has installed, run ",(0,r.kt)("inlineCode",{parentName:"p"},"wally init")," within your project's directory, and then add the various modules that you are looking for (found here as dependencies). For example, the following could be a ",(0,r.kt)("inlineCode",{parentName:"p"},"wally.toml")," file for a project that includes a few of these modules:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-toml"},'[package]\nname = "Your_Name/Your_Project"\nversion = "0.1.0"\nregistry = "https://github.com/UpliftGames/wally-index"\nrealm = "shared"\n\n[dependencies]\nCleanser = "robloxiandemo/cleanser@^0"\nProfileService = "robloxiandemo/profileservice-demo@^0"\n')),(0,r.kt)("p",null,"To install these dependencies, run ",(0,r.kt)("inlineCode",{parentName:"p"},"wally install")," within your project. Wally will then create a ",(0,r.kt)("inlineCode",{parentName:"p"},"Package")," folder in your directory with the installed dependencies."),(0,r.kt)("h2",{id:"rojo-configuration"},"Rojo Configuration"),(0,r.kt)("p",null,"The Package folder created by Wally should be synced into Roblox Studio through your Rojo configuration. For example, a Rojo configuration might have the following entry to sync the ",(0,r.kt)("inlineCode",{parentName:"p"},"Packages")," folder into the ReplicatedStorage:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "name": "roblox-modules-example",\n\n    "tree": {\n        "$className": "DataModel",\n\n        "ReplicatedStorage": {\n            "$className": "ReplicatedStorage",\n\n            "Packages": {\n                "$path": "Packages"\n            }\n        }\n    }\n}\n')),(0,r.kt)("h2",{id:"usage-example"},"Usage Example"),(0,r.kt)("p",null,"The installed dependencies could now be used in scripts (example):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'--// Types\ntype table = {[any]: any}\n\n--// Reference the folder with Packages:\nlocal Packages: Folder = game:GetService("ReplicatedStorage")["Packages"]\n\n--// Require the modules:\nlocal Cleanser: table = require(Packages["Cleanser"])\nlocal Signal: table = require(Packages["Signal"])\n\n--// Use the modules:\nlocal function NewInstance(): Instance\n    local NumberValue: NumberValue = Instance.new("NumberValue")\n    NumberValue.Name = "NumberValue"\n    NumberValue.Value = 1e+3\n    NumberValue.Parent = Packages\n\n    return (NumberValue) :: Instance\nend\n\nlocal function CountTableEntries(Table: table): number\n    local Count: number = 0\n\n    for _: number, Value: Object in pairs(Table) do\n        Count += 1\n    end\n\n    return (Count)\nend\n\nlocal Cleanser: table = Cleanser.New()\n\n--// Cleanser:Add(Task) works as well!\nCleanser:Grant(NewInstance)\n\n--// Cleanser:DelayedDestroy(Time) works as well!\nCleanser:TimedDestroy(2)\n\nprint("The cleanser has officially deleted!")\n\nlocal TableSignal: table = Signal.New("TestSignal")\n\nTableSignal:Connect(function(Data: any?): any?\n    local TotalEntries: number = CountTableEntries(Data)\n\n    print(TotalEntries)\nend)\n\nTableSignal:Fire({\n\n    "A",\n    "B",\n    "C"\n\n})\n')))}d.isMDXComponent=!0}}]);